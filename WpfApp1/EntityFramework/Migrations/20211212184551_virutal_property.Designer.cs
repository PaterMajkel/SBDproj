// <auto-generated />
using System;
using EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EntityFramework.Migrations
{
    [DbContext(typeof(EFDbContext))]
    [Migration("20211212184551_virutal_property")]
    partial class virutal_property
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EntityFramework.Models.Kartoteka", b =>
                {
                    b.Property<int>("ID_osoby")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Wiek")
                        .HasColumnType("int");

                    b.Property<byte[]>("Zdjecie")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("ID_osoby");

                    b.ToTable("Kartotekas");
                });

            modelBuilder.Entity("EntityFramework.Models.Komenda", b =>
                {
                    b.Property<int>("ID_komendy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_regionu")
                        .HasColumnType("int");

                    b.Property<int?>("RegionID_regionu")
                        .HasColumnType("int");

                    b.HasKey("ID_komendy");

                    b.HasIndex("RegionID_regionu");

                    b.ToTable("Komendas");

                    b.HasData(
                        new
                        {
                            ID_komendy = 1,
                            Adres = "Muchomorska 9",
                            ID_regionu = 1
                        },
                        new
                        {
                            ID_komendy = 2,
                            Adres = "Zawadiaków 14",
                            ID_regionu = 2
                        },
                        new
                        {
                            ID_komendy = 3,
                            Adres = "Mirosławska 15",
                            ID_regionu = 4
                        },
                        new
                        {
                            ID_komendy = 4,
                            Adres = "Piątków 21/7",
                            ID_regionu = 5
                        },
                        new
                        {
                            ID_komendy = 5,
                            Adres = "Miłosierdzia Pańskiego 2137",
                            ID_regionu = 6
                        },
                        new
                        {
                            ID_komendy = 6,
                            Adres = "Obi-Wana Kenobiego 3",
                            ID_regionu = 7
                        },
                        new
                        {
                            ID_komendy = 7,
                            Adres = "Plackowa 98",
                            ID_regionu = 8
                        },
                        new
                        {
                            ID_komendy = 8,
                            Adres = "Iglasta 41",
                            ID_regionu = 3
                        },
                        new
                        {
                            ID_komendy = 9,
                            Adres = "Chrobrego 21",
                            ID_regionu = 9
                        });
                });

            modelBuilder.Entity("EntityFramework.Models.Miasto", b =>
                {
                    b.Property<int>("ID_miasta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nazwa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_miasta");

                    b.ToTable("Miastos");

                    b.HasData(
                        new
                        {
                            ID_miasta = 1,
                            Nazwa = "Białystok"
                        },
                        new
                        {
                            ID_miasta = 2,
                            Nazwa = "Kraków"
                        },
                        new
                        {
                            ID_miasta = 3,
                            Nazwa = "Warszawa"
                        },
                        new
                        {
                            ID_miasta = 4,
                            Nazwa = "Rzeszów"
                        },
                        new
                        {
                            ID_miasta = 5,
                            Nazwa = "Łódź"
                        },
                        new
                        {
                            ID_miasta = 6,
                            Nazwa = "Gdańsk"
                        },
                        new
                        {
                            ID_miasta = 7,
                            Nazwa = "Katowice"
                        },
                        new
                        {
                            ID_miasta = 8,
                            Nazwa = "Wrocław"
                        },
                        new
                        {
                            ID_miasta = 9,
                            Nazwa = "Poznań"
                        });
                });

            modelBuilder.Entity("EntityFramework.Models.Patrol", b =>
                {
                    b.Property<int>("ID_patrolu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Data_rozpoczecia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Data_zakonczenia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Godzina_rozpoczecia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Godzina_zakonczenia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_policjanta")
                        .HasColumnType("int");

                    b.Property<int>("ID_radiowozu")
                        .HasColumnType("int");

                    b.Property<int?>("PolicjantID_policjanta")
                        .HasColumnType("int");

                    b.Property<int?>("RadiowozID_radiowozu")
                        .HasColumnType("int");

                    b.HasKey("ID_patrolu");

                    b.HasIndex("PolicjantID_policjanta");

                    b.HasIndex("RadiowozID_radiowozu");

                    b.ToTable("Patrols");
                });

            modelBuilder.Entity("EntityFramework.Models.Policjant", b =>
                {
                    b.Property<int>("ID_policjanta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ID_komendy")
                        .HasColumnType("int");

                    b.Property<int>("ID_rangi")
                        .HasColumnType("int");

                    b.Property<string>("Imie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KomendaID_komendy")
                        .HasColumnType("int");

                    b.Property<string>("Nazwisko")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RangaID_rangi")
                        .HasColumnType("int");

                    b.HasKey("ID_policjanta");

                    b.HasIndex("KomendaID_komendy");

                    b.HasIndex("RangaID_rangi");

                    b.ToTable("Policjants");
                });

            modelBuilder.Entity("EntityFramework.Models.Przestepstwo", b =>
                {
                    b.Property<int>("ID_przestepstwa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Godzina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_przestepstwa");

                    b.ToTable("Przestepstwos");
                });

            modelBuilder.Entity("EntityFramework.Models.Radiowoz", b =>
                {
                    b.Property<int>("ID_radiowozu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Marka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rok_produkcji")
                        .HasColumnType("int");

                    b.HasKey("ID_radiowozu");

                    b.ToTable("Radiowozs");
                });

            modelBuilder.Entity("EntityFramework.Models.Ranga", b =>
                {
                    b.Property<int>("ID_rangi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nazwa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Pensja")
                        .HasColumnType("float");

                    b.HasKey("ID_rangi");

                    b.ToTable("Rangas");
                });

            modelBuilder.Entity("EntityFramework.Models.Region_Miasta", b =>
                {
                    b.Property<int>("ID_regionu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ID_miasta")
                        .HasColumnType("int");

                    b.Property<int?>("MiastoID_miasta")
                        .HasColumnType("int");

                    b.Property<string>("Nazwa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stopien_zagrozenia")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_regionu");

                    b.HasIndex("MiastoID_miasta");

                    b.ToTable("Region_Miastas");

                    b.HasData(
                        new
                        {
                            ID_regionu = 1,
                            ID_miasta = 1,
                            Nazwa = "Piasta",
                            Stopien_zagrozenia = "Niski"
                        },
                        new
                        {
                            ID_regionu = 2,
                            ID_miasta = 1,
                            Nazwa = "Skorupy",
                            Stopien_zagrozenia = "Wysoki"
                        },
                        new
                        {
                            ID_regionu = 3,
                            ID_miasta = 5,
                            Nazwa = "Bałuty",
                            Stopien_zagrozenia = "Śmiertelny"
                        },
                        new
                        {
                            ID_regionu = 4,
                            ID_miasta = 9,
                            Nazwa = "Paciorków",
                            Stopien_zagrozenia = "Średni"
                        },
                        new
                        {
                            ID_regionu = 5,
                            ID_miasta = 4,
                            Nazwa = "Puchatkowo",
                            Stopien_zagrozenia = "Niski"
                        },
                        new
                        {
                            ID_regionu = 6,
                            ID_miasta = 3,
                            Nazwa = "Niski Stok",
                            Stopien_zagrozenia = "Wysoki"
                        },
                        new
                        {
                            ID_regionu = 7,
                            ID_miasta = 3,
                            Nazwa = "Średnia Górka",
                            Stopien_zagrozenia = "Niski"
                        },
                        new
                        {
                            ID_regionu = 8,
                            ID_miasta = 8,
                            Nazwa = "Swoja",
                            Stopien_zagrozenia = "Średni"
                        },
                        new
                        {
                            ID_regionu = 9,
                            ID_miasta = 7,
                            Nazwa = "Chmurzyńska Wieś",
                            Stopien_zagrozenia = "Śmiertelny"
                        });
                });

            modelBuilder.Entity("EntityFramework.Models.Uzytkownik", b =>
                {
                    b.Property<int>("ID_uzytkownika")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ID_policjanta")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PolicjantID_policjanta")
                        .HasColumnType("int");

                    b.Property<string>("Rola")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_uzytkownika");

                    b.HasIndex("PolicjantID_policjanta");

                    b.ToTable("Uzytkowniks");

                    b.HasData(
                        new
                        {
                            ID_uzytkownika = 1,
                            Login = "Admin",
                            Password = "Admin",
                            Rola = "admin"
                        });
                });

            modelBuilder.Entity("EntityFramework.Models.Wykroczenia", b =>
                {
                    b.Property<int>("ID_wykroczenia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Godzina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_wykroczenia");

                    b.ToTable("Wykroczenias");
                });

            modelBuilder.Entity("KartotekaPrzestepstwo", b =>
                {
                    b.Property<int>("KartotekasID_osoby")
                        .HasColumnType("int");

                    b.Property<int>("PrzestepstwosID_przestepstwa")
                        .HasColumnType("int");

                    b.HasKey("KartotekasID_osoby", "PrzestepstwosID_przestepstwa");

                    b.HasIndex("PrzestepstwosID_przestepstwa");

                    b.ToTable("KartotekaPrzestepstwo");
                });

            modelBuilder.Entity("KartotekaWykroczenia", b =>
                {
                    b.Property<int>("KartotekasID_osoby")
                        .HasColumnType("int");

                    b.Property<int>("WykroczeniasID_wykroczenia")
                        .HasColumnType("int");

                    b.HasKey("KartotekasID_osoby", "WykroczeniasID_wykroczenia");

                    b.HasIndex("WykroczeniasID_wykroczenia");

                    b.ToTable("KartotekaWykroczenia");
                });

            modelBuilder.Entity("PolicjantPrzestepstwo", b =>
                {
                    b.Property<int>("PolicjantsID_policjanta")
                        .HasColumnType("int");

                    b.Property<int>("PrzestepstwosID_przestepstwa")
                        .HasColumnType("int");

                    b.HasKey("PolicjantsID_policjanta", "PrzestepstwosID_przestepstwa");

                    b.HasIndex("PrzestepstwosID_przestepstwa");

                    b.ToTable("PolicjantPrzestepstwo");
                });

            modelBuilder.Entity("PolicjantWykroczenia", b =>
                {
                    b.Property<int>("PolicjantsID_policjanta")
                        .HasColumnType("int");

                    b.Property<int>("WykroczeniasID_wykroczenia")
                        .HasColumnType("int");

                    b.HasKey("PolicjantsID_policjanta", "WykroczeniasID_wykroczenia");

                    b.HasIndex("WykroczeniasID_wykroczenia");

                    b.ToTable("PolicjantWykroczenia");
                });

            modelBuilder.Entity("EntityFramework.Models.Komenda", b =>
                {
                    b.HasOne("EntityFramework.Models.Region_Miasta", "Region")
                        .WithMany()
                        .HasForeignKey("RegionID_regionu");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("EntityFramework.Models.Patrol", b =>
                {
                    b.HasOne("EntityFramework.Models.Policjant", "Policjant")
                        .WithMany("Patrols")
                        .HasForeignKey("PolicjantID_policjanta");

                    b.HasOne("EntityFramework.Models.Radiowoz", "Radiowoz")
                        .WithMany()
                        .HasForeignKey("RadiowozID_radiowozu");

                    b.Navigation("Policjant");

                    b.Navigation("Radiowoz");
                });

            modelBuilder.Entity("EntityFramework.Models.Policjant", b =>
                {
                    b.HasOne("EntityFramework.Models.Komenda", "Komenda")
                        .WithMany()
                        .HasForeignKey("KomendaID_komendy");

                    b.HasOne("EntityFramework.Models.Ranga", "Ranga")
                        .WithMany()
                        .HasForeignKey("RangaID_rangi");

                    b.Navigation("Komenda");

                    b.Navigation("Ranga");
                });

            modelBuilder.Entity("EntityFramework.Models.Region_Miasta", b =>
                {
                    b.HasOne("EntityFramework.Models.Miasto", "Miasto")
                        .WithMany()
                        .HasForeignKey("MiastoID_miasta");

                    b.Navigation("Miasto");
                });

            modelBuilder.Entity("EntityFramework.Models.Uzytkownik", b =>
                {
                    b.HasOne("EntityFramework.Models.Policjant", "Policjant")
                        .WithMany()
                        .HasForeignKey("PolicjantID_policjanta");

                    b.Navigation("Policjant");
                });

            modelBuilder.Entity("KartotekaPrzestepstwo", b =>
                {
                    b.HasOne("EntityFramework.Models.Kartoteka", null)
                        .WithMany()
                        .HasForeignKey("KartotekasID_osoby")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFramework.Models.Przestepstwo", null)
                        .WithMany()
                        .HasForeignKey("PrzestepstwosID_przestepstwa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KartotekaWykroczenia", b =>
                {
                    b.HasOne("EntityFramework.Models.Kartoteka", null)
                        .WithMany()
                        .HasForeignKey("KartotekasID_osoby")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFramework.Models.Wykroczenia", null)
                        .WithMany()
                        .HasForeignKey("WykroczeniasID_wykroczenia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PolicjantPrzestepstwo", b =>
                {
                    b.HasOne("EntityFramework.Models.Policjant", null)
                        .WithMany()
                        .HasForeignKey("PolicjantsID_policjanta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFramework.Models.Przestepstwo", null)
                        .WithMany()
                        .HasForeignKey("PrzestepstwosID_przestepstwa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PolicjantWykroczenia", b =>
                {
                    b.HasOne("EntityFramework.Models.Policjant", null)
                        .WithMany()
                        .HasForeignKey("PolicjantsID_policjanta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFramework.Models.Wykroczenia", null)
                        .WithMany()
                        .HasForeignKey("WykroczeniasID_wykroczenia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EntityFramework.Models.Policjant", b =>
                {
                    b.Navigation("Patrols");
                });
#pragma warning restore 612, 618
        }
    }
}
